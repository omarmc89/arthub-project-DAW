{"version":3,"file":"Qh_Ab_4M.js","sources":["../../../../composables/useUpdateArtwork.js","../../../../pages/dashboard/[id].vue"],"sourcesContent":["import { useAuthStore } from '~/store/auth'\n\nexport const useUpdateArtwork = async (fetchData) => {\n    const { sessionToken} = useAuthStore();\n    const runtimeConfig = useRuntimeConfig()\n\n    const { data, error, pending } = await useFetch(runtimeConfig.public.baseUrl+'update/artwork/', {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${sessionToken}`\n        },\n        body: JSON.stringify({\n            fetchData\n        })\n    })\n\n    return { data: data.value, error: error.value }\n}","<template>\n    <section class=\"flex flex-row\">\n        <article class=\"image-container\">\n            <img v-if=\"artwork.image_url !== ''\" :src=\"artwork.image_url\" :alt=\"artwork.title\"/>\n            <USkeleton v-if=\"artwork.image_url===''\" class=\"h-[600px] w-[500px] mr-32\" :ui=\"{ rounded: 'rounded-xl' }\" />\n        </article>\n        <article class=\"form-container flex items-center justify-center\">\n            <form class=\"artwork-form space-y-4 text-slate-900\" @submit.prevent=\"updateArtwork\">\n                    <div>\n                        <div class=\"form-label\">\n                            <label for=\"title\">Title</label>\n                            <input v-model=\"artwork.title\" id=\"title\" name=\"title\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div class=\"form-label\">\n                            <label for=\"description\">Description</label>\n                            <input v-model=\"artwork.description\" id=\"description\" name=\"description\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div class=\"form-label\">\n                            <label for=\"image_url\">Image URL</label>\n                            <input v-model=\"artwork.image_url\" id=\"image_url\" name=\"image_url\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div class=\"form-label\">\n                            <label for=\"price\">Price</label>\n                            <input v-model=\"artwork.price\" id=\"price\" name=\"price\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n\n                        <div v-if=\"isPhoto && artworkDetails\" class=\"form-label\">\n                            <label for=\"style\">Style</label>\n                            <input v-model=\"artwork.style\" id=\"style\" name=\"style\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div v-if=\"!isPhoto && artworkDetails\" class=\"form-label\">\n                            <label for=\"width\">Width</label>\n                            <input v-model=\"artwork.width\" id=\"width\" name=\"width\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div v-if=\"!isPhoto && artworkDetails\" class=\"form-label\">\n                            <label for=\"height\">Height</label>\n                            <input v-model=\"artwork.height\" id=\"height\" name=\"height\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                    </div>\n                <button type=\"submit\" :disabled=\"pendingFetch\" class=\"btn btn-primary\">\n                    <span v-if=\"pendingFetch\">Submitting...</span>\n                    <span v-else>Submit</span>\n                </button>\n            </form>\n        </article>\n    </section>\n    \n</template>\n\n<script setup>\n    import { useUserLoggedData } from '@/composables/useUserLoggedData'\n    import { useUpdateArtwork } from '@/composables/useUpdateArtwork';\n    \n    const toast = useToast();\n    const route = useRoute()\n    const router = useRouter()\n    const params = route.params\n    const id = ref(params.id)\n    const isPhoto = ref(true)\n    const pendingFetch = ref(false)\n    const dataFetch = ref('')\n    const errorFetch = ref('')\n    const imageFetched = ref(false)\n\n\n    const artworkDetails = ref({\n        style: '',\n        width: '',\n        height:'',\n    })\n\n    const artwork = ref({\n        title: '',\n        description: '',\n        image_url: '',\n        price: '',\n        style: '',\n        width: '',\n        height: '',\n    })\n\n    let artistData = await useUserLoggedData();\n\nonMounted(() => {\n    fetchArtwork(id.value)\n})\n    async function fetchArtwork(artworkId) {\n    const { data, error } = await useFetch(`https://arthub-api-polished-breeze-902.fly.dev/api/v1/artworkDetails/?id=${artworkId}`, {\n        // watch: [artworkCreated],\n    })\n    if (data) {\n        imageFetched.value = true\n        artwork.value = data.value.artwork\n        artworkDetails.value = data.value.photo ? data.value.photo : data.value.painting\n        isPhoto.value = data.value.photo !== undefined ? true : false\n        artwork.value.style = artworkDetails.value.style\n        artwork.value.width = artworkDetails.value.width\n        artwork.value.height = artworkDetails.value.height\n    }\n    if (error) {\n        console.log(error)\n    }\n}\n\nconst updateArtwork = async () => {  \n    const fetchingData = {\n        ...artwork.value,\n        type: isPhoto.value ? 'photo' : 'painting',\n        artworkId: id.value\n        }\n\n        pendingFetch.value = true\n        const { data, error } = await useUpdateArtwork(fetchingData)\n\n        if (error) {\n            errorFetch.value = error\n            pendingFetch.value = false\n\n        } else {\n            errorFetch.value = ''\n            dataFetch.value = data\n            pendingFetch.value = false\n            artoworkUpdateOk()\n        }\n}\n\nfunction artoworkUpdateOk() {\n    toast.add({ title: 'Congratulations! Artwork updated!',\n            timeout: 1500,  callback: () => {\n        setTimeout(() => {\n            navigateTo('/dashboard');\n        }, 250)}\n    })             \n    dataFetch.value = ''\n    errorFetch.value = ''\n    artworkCreated.value += 1\n}\n\n// watch(() => artwork.value.image_url, (newValue, oldValue) => {\n//   // Verifica si la nueva URL de la imagen no es una cadena vacía y es diferente de la anterior\n//   if (newValue !== '' && newValue !== oldValue && !imageFetched) {\n//     artwork.value.image_url = 'https://cdn-icons-png.flaticon.com/512/3616/3616929.png'\n//   }\n// });\n\n</script>\n\n<style scooped>\n.container {\n    --uib-size: 45px;\n    --uib-color: black;\n    --uib-speed: 1.75s;\n    position: relative;\n    height: var(--uib-size);\n    width: var(--uib-size);\n    animation: rotate calc(var(--uib-speed) * 4) linear infinite;\n}\n.image-container {\n    flex: 1; /* Toma todo el espacio disponible */\n    margin-right: 20px; /* Espacio entre la imagen y el formulario */\n}\n\n.form-container {\n    flex: 1; /* Toma todo el espacio disponible */\n}\n\n  .artwork-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center; /* Centra horizontalmente los elementos del formulario */\n  }\n\n  .form-label {\n    width: 100%;\n    max-width: 1000px; /* Ancho máximo del formulario */\n  }\n\n  .form-control {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 20px; /* Cantos redondos */\n    margin-bottom: 10px;\n    box-sizing: border-box;\n  }\n\n  .btn {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 20px; /* Cantos redondos */\n    background-color: #232c33;\n    color: #e1e9ec;\n    cursor: pointer;\n  }\n\n  .btn:hover {\n    background-color: #e1e9ec;\n    color: #232c33;\n  }\n</style>"],"names":["useUpdateArtwork","fetchData","sessionToken","useAuthStore","runtimeConfig","useRuntimeConfig","data","error","pending","useFetch","toast","useToast","route","useRoute","useRouter","params","id","ref","isPhoto","pendingFetch","dataFetch","errorFetch","imageFetched","artworkDetails","artwork","__temp","__restore","_withAsyncContext","useUserLoggedData","onMounted","fetchArtwork","artworkId","updateArtwork","fetchingData","artoworkUpdateOk","navigateTo"],"mappings":"iUAEO,MAAMA,EAAmB,MAAOC,GAAc,CACjD,KAAM,CAAE,aAAAC,CAAY,EAAIC,IAClBC,EAAgBC,EAAkB,EAElC,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,CAAS,EAAG,MAAMC,EAASL,EAAc,OAAO,QAAQ,kBAAmB,CAC5F,OAAQ,MACR,QAAS,CACL,eAAgB,mBAChB,cAAe,UAAUF,CAAY,EACxC,EACD,KAAM,KAAK,UAAU,CACjB,UAAAD,CACZ,CAAS,CACL,EAAA,aAAC,EAED,MAAO,CAAE,KAAMK,EAAK,MAAO,MAAOC,EAAM,KAAO,CACnD,6qBCmCI,MAAMG,EAAQC,IACRC,EAAQC,EAAU,EACTC,EAAW,EAC1B,MAAMC,EAASH,EAAM,OACfI,EAAKC,EAAIF,EAAO,EAAE,EAClBG,EAAUD,EAAI,EAAI,EAClBE,EAAeF,EAAI,EAAK,EACxBG,EAAYH,EAAI,EAAE,EAClBI,EAAaJ,EAAI,EAAE,EACnBK,EAAeL,EAAI,EAAK,EAGxBM,EAAiBN,EAAI,CACvB,MAAO,GACP,MAAO,GACP,OAAO,EACf,CAAK,EAEKO,EAAUP,EAAI,CAChB,MAAO,GACP,YAAa,GACb,UAAW,GACX,MAAO,GACP,MAAO,GACP,MAAO,GACP,OAAQ,EAChB,CAAK,EAEgB,CAAAQ,EAAAC,CAAA,EAAAC,EAAA,IAAMC,EAAiB,CAAC,gBAE7CC,EAAU,IAAM,CACZC,EAAad,EAAG,KAAK,CACzB,CAAC,EACG,eAAec,EAAaC,EAAW,CACvC,KAAM,CAAE,KAAAzB,EAAM,MAAAC,GAAU,MAAME,EAAS,4EAA4EsB,CAAS,GAAI,CAEhI,EAAA,aAAC,EACGzB,IACAgB,EAAa,MAAQ,GACrBE,EAAQ,MAAQlB,EAAK,MAAM,QAC3BiB,EAAe,MAAQjB,EAAK,MAAM,MAAQA,EAAK,MAAM,MAAQA,EAAK,MAAM,SACxEY,EAAQ,MAAQZ,EAAK,MAAM,QAAU,OACrCkB,EAAQ,MAAM,MAAQD,EAAe,MAAM,MAC3CC,EAAQ,MAAM,MAAQD,EAAe,MAAM,MAC3CC,EAAQ,MAAM,OAASD,EAAe,MAAM,QAE5ChB,GACA,QAAQ,IAAIA,CAAK,CAEzB,CAEA,MAAMyB,EAAgB,SAAY,CAC9B,MAAMC,EAAe,CACjB,GAAGT,EAAQ,MACX,KAAMN,EAAQ,MAAQ,QAAU,WAChC,UAAWF,EAAG,KACb,EAEDG,EAAa,MAAQ,GACrB,KAAM,CAAE,KAAAb,EAAM,MAAAC,CAAO,EAAG,MAAMP,EAAiBiC,CAAY,EAEvD1B,GACAc,EAAW,MAAQd,EACnBY,EAAa,MAAQ,KAGrBE,EAAW,MAAQ,GACnBD,EAAU,MAAQd,EAClBa,EAAa,MAAQ,GACrBe,EAAkB,EAE9B,EAEA,SAASA,GAAmB,CACxBxB,EAAM,IAAI,CAAE,MAAO,oCACX,QAAS,KAAO,SAAU,IAAM,CACpC,WAAW,IAAM,CACbyB,EAAW,YAAY,CAC1B,EAAE,GAAG,CAAC,CACf,CAAK,EACDf,EAAU,MAAQ,GAClBC,EAAW,MAAQ,GACnB,eAAe,OAAS,CAC5B"}