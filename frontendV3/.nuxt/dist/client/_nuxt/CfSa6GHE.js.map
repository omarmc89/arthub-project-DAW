{"version":3,"file":"CfSa6GHE.js","sources":["../../../../node_modules/@nuxt/ui/dist/runtime/ui.config/elements/badge.mjs","../../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Badge.vue"],"sourcesContent":["export default {\n  base: \"inline-flex items-center\",\n  rounded: \"rounded-md\",\n  font: \"font-medium\",\n  size: {\n    xs: \"text-xs px-1.5 py-0.5\",\n    sm: \"text-xs px-2 py-1\",\n    md: \"text-sm px-2 py-1\",\n    lg: \"text-sm px-2.5 py-1.5\"\n  },\n  color: {\n    white: {\n      solid: \"ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-900 dark:text-white bg-white dark:bg-gray-900\"\n    },\n    gray: {\n      solid: \"ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-700 dark:text-gray-200 bg-gray-50 dark:bg-gray-800\"\n    },\n    black: {\n      solid: \"text-white dark:text-gray-900 bg-gray-900 dark:bg-white\"\n    }\n  },\n  variant: {\n    solid: \"bg-{color}-500 dark:bg-{color}-400 text-white dark:text-gray-900\",\n    outline: \"text-{color}-500 dark:text-{color}-400 ring-1 ring-inset ring-{color}-500 dark:ring-{color}-400\",\n    soft: \"bg-{color}-50 dark:bg-{color}-400 dark:bg-opacity-10 text-{color}-500 dark:text-{color}-400\",\n    subtle: \"bg-{color}-50 dark:bg-{color}-400 dark:bg-opacity-10 text-{color}-500 dark:text-{color}-400 ring-1 ring-inset ring-{color}-500 dark:ring-{color}-400 ring-opacity-25 dark:ring-opacity-25\"\n  },\n  default: {\n    size: \"sm\",\n    variant: \"solid\",\n    color: \"primary\"\n  }\n};\n","<template>\n  <span :class=\"badgeClass\" v-bind=\"attrs\">\n    <slot>{{ label }}</slot>\n  </span>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport { useInjectButtonGroup } from \"../../composables/useButtonGroup\";\nimport appConfig from \"#build/app.config\";\nimport { badge } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.badge, badge);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    label: {\n      type: [String, Number],\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"badge\", toRef(props, \"ui\"), config);\n    const { size, rounded } = useInjectButtonGroup({ ui, props });\n    const badgeClass = computed(() => {\n      const variant = ui.value.color?.[props.color]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.font,\n        rounded.value,\n        ui.value.size[size.value],\n        variant?.replaceAll(\"{color}\", props.color)\n      ), props.class);\n    });\n    return {\n      attrs,\n      badgeClass\n    };\n  }\n});\n</script>\n"],"names":["badge","config","mergeConfig","appConfig","_sfc_main","defineComponent","value","value2","props","ui","attrs","useUI","toRef","size","rounded","useInjectButtonGroup","badgeClass","computed","variant","_b","_a","twMerge","twJoin","_openBlock","_createElementBlock","_mergeProps","_ctx","_renderSlot","_createTextVNode","_toDisplayString"],"mappings":"iMAAA,MAAeA,EAAA,CACb,KAAM,2BACN,QAAS,aACT,KAAM,cACN,KAAM,CACJ,GAAI,wBACJ,GAAI,oBACJ,GAAI,oBACJ,GAAI,uBACL,EACD,MAAO,CACL,MAAO,CACL,MAAO,4GACR,EACD,KAAM,CACJ,MAAO,iHACR,EACD,MAAO,CACL,MAAO,yDACR,CACF,EACD,QAAS,CACP,MAAO,mEACP,QAAS,kGACT,KAAM,8FACN,OAAQ,2LACT,EACD,QAAS,CACP,KAAM,KACN,QAAS,QACT,MAAO,SACR,CACH,EClBMC,EAASC,EAAYC,EAAU,GAAG,SAAUA,EAAU,GAAG,MAAOH,CAAK,EACtEI,EAAaC,EAAa,CAC7B,aAAc,GACd,MAAO,CACL,KAAM,CACJ,KAAM,OACN,QAAS,IAAMJ,EAAO,QAAQ,KAC9B,UAAUK,EAAO,CACf,OAAO,OAAO,KAAKL,EAAO,IAAI,EAAE,SAASK,CAAK,CAChD,CACD,EACD,MAAO,CACL,KAAM,OACN,QAAS,IAAML,EAAO,QAAQ,MAC9B,UAAUK,EAAO,CACf,MAAO,CAAC,GAAGH,EAAU,GAAG,OAAQ,GAAG,OAAO,KAAKF,EAAO,KAAK,CAAC,EAAE,SAASK,CAAK,CAC9E,CACD,EACD,QAAS,CACP,KAAM,OACN,QAAS,IAAML,EAAO,QAAQ,QAC9B,UAAUK,EAAO,CACf,MAAO,CACL,GAAG,OAAO,KAAKL,EAAO,OAAO,EAC7B,GAAG,OAAO,OAAOA,EAAO,KAAK,EAAE,QAASM,GAAW,OAAO,KAAKA,CAAM,CAAC,CACxE,EAAE,SAASD,CAAK,CAClB,CACD,EACD,MAAO,CACL,KAAM,CAAC,OAAQ,MAAM,EACrB,QAAS,IACV,EACD,MAAO,CACL,KAAM,CAAC,OAAQ,OAAQ,KAAK,EAC5B,QAAS,IAAM,EAChB,EACD,GAAI,CACF,KAAM,OACN,QAAS,KAAO,CAAA,EAClB,CACD,EACD,MAAME,EAAO,CACX,KAAM,CAAE,GAAAC,EAAI,MAAAC,CAAQ,EAAEC,EAAM,QAASC,EAAMJ,EAAO,IAAI,EAAGP,CAAM,EACzD,CAAE,KAAAY,EAAM,QAAAC,CAAQ,EAAIC,EAAqB,CAAE,GAAAN,EAAI,MAAAD,CAAM,CAAC,EACtDQ,EAAaC,EAAS,IAAM,SAChC,MAAMC,IAAUC,GAAAC,EAAAX,EAAG,MAAM,QAAT,YAAAW,EAAiBZ,EAAM,SAAvB,YAAAW,EAAgCX,EAAM,WAAYC,EAAG,MAAM,QAAQD,EAAM,OAAO,EAChG,OAAOa,EAAQC,EACbb,EAAG,MAAM,KACTA,EAAG,MAAM,KACTK,EAAQ,MACRL,EAAG,MAAM,KAAKI,EAAK,KAAK,EACxBK,GAAA,YAAAA,EAAS,WAAW,UAAWV,EAAM,MACvC,EAAGA,EAAM,KAAK,CAChB,CAAC,EACD,MAAO,CACL,MAAAE,EACA,WAAAM,EAEJ,CACF,CAAC,0BAxEC,OAAAO,EAAA,EAAAC,EAEO,OAFPC,EAEO,CAFA,MAAOC,EAAA,UAAU,EAAUA,EAAK,KAAA,EAAA,CACrCC,EAAwBD,sBAAxB,IAAwB,CAF5BE,EAAAC,EAEaH,EAAK,KAAA,EAAA,CAAA","x_google_ignoreList":[0,1]}