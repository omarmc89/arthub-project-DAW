{"version":3,"file":"AvatarGroup-Db-3AHdV.js","sources":["../../../../node_modules/@nuxt/ui/dist/runtime/ui.config/elements/avatarGroup.mjs","../../../../node_modules/@nuxt/ui/dist/runtime/components/elements/AvatarGroup.mjs"],"sourcesContent":["export default {\n  wrapper: \"inline-flex flex-row-reverse justify-end\",\n  ring: \"ring-2 ring-white dark:ring-gray-900\",\n  margin: \"-me-1.5 first:me-0\"\n};\n","import { h, cloneVNode, computed, toRef, defineComponent } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport UAvatar from \"./Avatar.vue\";\nimport { useUI } from \"../../composables/useUI.mjs\";\nimport { mergeConfig, getSlotsChildren } from \"../../utils/index.mjs\";\nimport appConfig from \"#build/app.config\";\nimport { avatar, avatarGroup } from \"#ui/ui.config\";\nconst avatarConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.avatar, avatar);\nconst avatarGroupConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.avatarGroup, avatarGroup);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(avatarConfig.size).includes(value);\n      }\n    },\n    max: {\n      type: Number,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, { slots }) {\n    const { ui, attrs } = useUI(\"avatarGroup\", toRef(props, \"ui\"), avatarGroupConfig, toRef(props, \"class\"));\n    const children = computed(() => getSlotsChildren(slots));\n    const max = computed(() => typeof props.max === \"string\" ? parseInt(props.max, 10) : props.max);\n    const clones = computed(() => children.value.map((node, index) => {\n      const vProps = {};\n      if (!props.max || max.value && index < max.value) {\n        if (props.size) {\n          vProps.size = props.size;\n        }\n        vProps.class = node.props.class || \"\";\n        vProps.class = twMerge(twJoin(vProps.class, ui.value.ring, ui.value.margin), vProps.class);\n        return cloneVNode(node, vProps);\n      }\n      if (max.value !== void 0 && index === max.value) {\n        return h(UAvatar, {\n          size: props.size || avatarConfig.default.size,\n          text: `+${children.value.length - max.value}`,\n          class: twJoin(ui.value.ring, ui.value.margin)\n        });\n      }\n      return null;\n    }).filter(Boolean).reverse());\n    return () => h(\"div\", { class: ui.value.wrapper, ...attrs.value }, clones.value);\n  }\n});\n"],"names":["UAvatar"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAe,cAAA;AAAA,EACb,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AACV;ACGA,MAAM,eAAe,YAAY,UAAU,GAAG,UAAU,UAAU,GAAG,QAAQ,MAAM;AACnF,MAAM,oBAAoB,YAAY,UAAU,GAAG,UAAU,UAAU,GAAG,aAAa,WAAW;AAClG,MAAA,cAAe,gBAAgB;AAAA,EAC7B,cAAc;AAAA,EACd,OAAO;AAAA,IACL,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,UAAU,OAAO;AACf,eAAO,OAAO,KAAK,aAAa,IAAI,EAAE,SAAS,KAAK;AAAA,MACrD;AAAA,IACF;AAAA,IACD,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA,IACD,OAAO;AAAA,MACL,MAAM,CAAC,QAAQ,QAAQ,KAAK;AAAA,MAC5B,SAAS,MAAM;AAAA,IAChB;AAAA,IACD,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS,OAAO,CAAA;AAAA,IACjB;AAAA,EACF;AAAA,EACD,MAAM,OAAO,EAAE,SAAS;AACtB,UAAM,EAAE,IAAI,MAAO,IAAG,MAAM,eAAe,MAAM,OAAO,IAAI,GAAG,mBAAmB,MAAM,OAAO,OAAO,CAAC;AACvG,UAAM,WAAW,SAAS,MAAM,iBAAiB,KAAK,CAAC;AACvD,UAAM,MAAM,SAAS,MAAM,OAAO,MAAM,QAAQ,WAAW,SAAS,MAAM,KAAK,EAAE,IAAI,MAAM,GAAG;AAC9F,UAAM,SAAS,SAAS,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,UAAU;AAChE,YAAM,SAAS,CAAA;AACf,UAAI,CAAC,MAAM,OAAO,IAAI,SAAS,QAAQ,IAAI,OAAO;AAChD,YAAI,MAAM,MAAM;AACd,iBAAO,OAAO,MAAM;AAAA,QACrB;AACD,eAAO,QAAQ,KAAK,MAAM,SAAS;AACnC,eAAO,QAAQ,QAAQ,OAAO,OAAO,OAAO,GAAG,MAAM,MAAM,GAAG,MAAM,MAAM,GAAG,OAAO,KAAK;AACzF,eAAO,WAAW,MAAM,MAAM;AAAA,MAC/B;AACD,UAAI,IAAI,UAAU,UAAU,UAAU,IAAI,OAAO;AAC/C,eAAO,EAAEA,oBAAS;AAAA,UAChB,MAAM,MAAM,QAAQ,aAAa,QAAQ;AAAA,UACzC,MAAM,IAAI,SAAS,MAAM,SAAS,IAAI,KAAK;AAAA,UAC3C,OAAO,OAAO,GAAG,MAAM,MAAM,GAAG,MAAM,MAAM;AAAA,QACtD,CAAS;AAAA,MACF;AACD,aAAO;AAAA,IACR,CAAA,EAAE,OAAO,OAAO,EAAE,QAAS,CAAA;AAC5B,WAAO,MAAM,EAAE,OAAO,EAAE,OAAO,GAAG,MAAM,SAAS,GAAG,MAAM,MAAO,GAAE,OAAO,KAAK;AAAA,EAChF;AACH,CAAC;","x_google_ignoreList":[0,1]}