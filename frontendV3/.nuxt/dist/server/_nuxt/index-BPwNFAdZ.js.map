{"version":3,"file":"index-BPwNFAdZ.js","sources":["../../../../pages/login/index.vue"],"sourcesContent":["<template>\n    <section>\n        <form class=\"form space-y-4 mt-2 text-slate-900 flex flex-col items-center justify-center\" @submit.prevent=\"login\">\n            <h2 v-if=\"loginError\" class=\"text-xl text-red-800 rounded-xl p-2 mt-2 bg-red-200\"> Invalid Credentials</h2>\n            <h2 v-if=\"!loginError\" class=\"text-xl rounded-xl p-2 bg-transparent text-transparent\">Login</h2>\n            <section class=\"flex flex-col items-center gap-4\">\n                <div class=\"form-label flex flex-col items-center\">\n                    <label for=\"username\">Username</label>\n                    <input v-model=\"user.email\" type=\"text\" placeholder=\"Email\" required class=\"form-control rounded-full bg-white\">\n                </div>\n                <div class=\"form-label flex flex-col items-center mb-6\">\n                    <label for=\"email\">Email</label>\n                    <input v-model=\"user.password\" type=\"password\" placeholder=\"Password\" required class=\"form-control rounded-full bg-white\">\n                </div>\n            </section>\n            <button type=\"submit\" :disabled=\"pendingFetch\" class=\"btn\">\n                <span v-if=\"pendingFetch\">Submitting...</span>\n                <span v-else>Login</span>\n            </button>\n            \n        </form>\n    </section>\n</template>\n\n<script setup>\n    definePageMeta({\n    layout: 'custom',\n    })\n\n    import { storeToRefs } from 'pinia'\n    import { useAuthStore} from  '~/store/auth'\n\n    const { authenticateUser } = useAuthStore()\n    const { authenticated, userLogged } = storeToRefs(useAuthStore())\n\n    const user = ref({\n        email: '',\n        password: '',\n    })\n\n    const loginError = ref(false)\n    const toast = useToast();\n    const router = useRouter();\n\n    function resetLogin() {\n        user.value.email = ''\n        user.value.password = ''\n    }\n\n    function redirectToDashboard() {\n        navigateTo('/dashboard')\n    }\n\n    const login = async () => {\n        loginError.value = false\n        const { data, error } = await authenticateUser(user.value)\n        // if (authenticated) {\n        //     toast.add({ title: 'Login correct! Redirecting to Home...',\n        //     timeout: 2000, callback:() => router.push('/dashboard') })\n        // }\n        if (data) {\n            toast.add({ title: 'Login correct! Redirecting to your Dashboard...',\n            timeout: 2000, callback:() => redirectToDashboard() })\n        }\n\n        if (error) {\n            loginError.value = true\n            toast.add({ title: 'Login incorrect! Please try again...', timeout: 1500, color:\"red\", callback:resetLogin()})\n        }\n    }\n\n</script>\n\n<style scoped>\n\n.form-label {\n  width: 100%;\n  max-width: 1000px;\n}\n\n.form-label label{\n    font-size: 2rem;\n    font-family: 'Garute';\n}\n\n.form-label input{\n    font-size: 1.5rem;\n    font-family: 'Afacad';\n    font-weight: 500;\n    color: #818cf8;\n    text-transform: uppercase;\n}\n\n.form-control {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 20px;\n  margin-bottom: 10px;\n  box-sizing: border-box;\n}\n\n.btn {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 20px;\n    background-color: #232c33;\n    color: #e1e9ec;\n    cursor: pointer;\n}\n\n.btn:hover {\n    background-color: #e1e9ec;\n    color: #232c33;\n}\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCiC,iBAAc;AACL,gBAAY,aAAY,CAAE;AAEhE,UAAM,OAAO,IAAI;AAAA,MACb,OAAO;AAAA,MACP,UAAU;AAAA,IAClB,CAAK;AAED,UAAM,aAAa,IAAI,KAAK;AACd,aAAW;AACV,cAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}