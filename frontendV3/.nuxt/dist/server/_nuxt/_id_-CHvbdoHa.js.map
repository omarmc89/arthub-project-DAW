{"version":3,"file":"_id_-CHvbdoHa.js","sources":["../../../../pages/artists/[id].vue"],"sourcesContent":["<template>\n        <ArtworkShowSkeleton v-if=\"pendingFetch\" />\n        <div class=\"flex flex-col h-100\" v-if=\"!pendingFetch\">\n            <section class=\"flex flex-row gap-8 text-center items-center justify-center h-2/6\">\n                <h1 class=\"title drop-shadow-xl\">{{ user.username }}</h1>              \n            </section>\n            <section class=\"flex flex-row gap-8 h-4/6\">\n                <article class=\"w-1/2\">     \n                    <div class=\"image-container h-full flex items-center justify-center\">\n                        <img :src=\"user.avatar\" :alt=\"user.username\" class=\"max-w-full max-h-full\"> \n                    </div>\n                </article>\n                <article class=\"w-1/2\">\n                        <div class=\"details-container flex flex-col items-center justify-around h-full space-y-4 text-slate-900\">\n                            <h1 class=\"title drop-shadow-xl\">{{ user.first_name }}</h1>\n                            <p class=\"title drop-shadow-xl\">{{ user.last_name }}</p>\n                            <p class=\"info uppercase\">{{ user.email }}</p>\n                        </div>\n                </article>\n            </section>\n        </div>\n</template>\n\n<script setup>\nconst runtimeConfig = useRuntimeConfig()\nimport { useUserLoggedData } from '@/composables/useUserLoggedData'\nimport { set } from 'zod';\nconst route = useRoute()\nconst params = route.params\nconst id = ref(params.id)\nconst pendingFetch = ref(true)\nconst fetchData = ref({})\nconsole.log(runtimeConfig.public.baseUrl)\n\nconst artist = ref({\n    first_name: \"\",\n    last_name: \"\",\n    avatar: \"\",\n})\n\nconst user = ref({\n    username: \"\",\n    fist_name:\"\",\n    last_name:\"\",\n})\n\nonMounted( async () => {\n    fetchArtist(id.value)\n    setTimeout(() => {\n        pendingFetch.value = false\n    }, 1000)\n})\n    async function fetchArtist(artistId) {\n    \n    const { data, error } = await useFetch(`${runtimeConfig.public.baseUrl}artists/${artistId}/`, {\n    })\n    if (data) {\n        fetchData.value = data.value\n        artist.value.nickname = fetchData.value.nickname\n        user.value = data.value.user\n    }\n    if (error) {\n        console.log(error)\n    }\n}\n\n</script>\n\n<style scoped>\n    .title {\n    font-family: 'Garute';\n    font-size: 3rem;\n    font-weight: 800;\n    text-align: center;\n    margin-bottom: 1rem;\n    text-align: center;\n}\n\n.info {\n    font-family: 'Afacad';\n    font-size: 2.5rem;\n    font-weight: 500;\n    text-align: center;\n}\n/* \n.image-container {\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);\n} */\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,UAAM,gBAAgB,iBAAkB;AAGxC,UAAM,QAAQ,SAAU;AACxB,UAAM,SAAS,MAAM;AACV,QAAI,OAAO,EAAE;AACxB,UAAM,eAAe,IAAI,IAAI;AACX,QAAI,EAAE;AACxB,YAAQ,IAAI,cAAc,OAAO,OAAO;AAEzB,QAAI;AAAA,MACf,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,QAAQ;AAAA,IACZ,CAAC;AAED,UAAM,OAAO,IAAI;AAAA,MACb,UAAU;AAAA,MACV,WAAU;AAAA,MACV,WAAU;AAAA,IACd,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;"}