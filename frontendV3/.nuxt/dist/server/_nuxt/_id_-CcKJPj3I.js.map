{"version":3,"file":"_id_-CcKJPj3I.js","sources":["../../../../composables/useUserLoggedData.js","../../../../pages/dashboard/[id].vue"],"sourcesContent":["import { useAuthStore } from '~/store/auth'\n\nexport const useUserLoggedData = async () => {\n    const runtimeConfig = useRuntimeConfig()\n    let artistData = null\n\n    const { userLogged , sessionToken} = useAuthStore(); // Asegúrate de invocar la función useAuthStore para obtener el estado actual\n    if (userLogged) {\n        const { data, error } = await useFetch(`${runtimeConfig.public.baseUrl}search/artist/?user_id=${userLogged.pk}`, {\n            method: 'GET',\n            headers:{\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${sessionToken}`\n            }\n        });\n        if (data) {\n            artistData = data.value\n        }\n        else\n            return error\n    } else {\n        console.error('No se pudo obtener el usuario logueado');\n        return null; // O un objeto vacío, dependiendo de lo que necesites\n    }\n    return artistData\n};\n","<template>\n    <section class=\"flex flex-row\">\n        <article class=\"image-container\">\n            <img v-if=\"artwork.image_url !== ''\" :src=\"artwork.image_url\" :alt=\"artwork.title\"/>\n            <USkeleton v-if=\"artwork.image_url===''\" class=\"h-[600px] w-[500px] mr-32\" :ui=\"{ rounded: 'rounded-xl' }\" />\n        </article>\n        <article class=\"form-container flex items-center justify-center\">\n            <form class=\"artwork-form space-y-4 text-slate-900\" @submit.prevent=\"updateArtwork\">\n                    <div>\n                        <div class=\"form-label\">\n                            <label for=\"title\">Title</label>\n                            <input v-model=\"artwork.title\" id=\"title\" name=\"title\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div class=\"form-label\">\n                            <label for=\"description\">Description</label>\n                            <input v-model=\"artwork.description\" id=\"description\" name=\"description\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div class=\"form-label\">\n                            <label for=\"image_url\">Image URL</label>\n                            <input v-model=\"artwork.image_url\" id=\"image_url\" name=\"image_url\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div class=\"form-label\">\n                            <label for=\"price\">Price</label>\n                            <input v-model=\"artwork.price\" id=\"price\" name=\"price\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n\n                        <div v-if=\"isPhoto && artworkDetails\" class=\"form-label\">\n                            <label for=\"style\">Style</label>\n                            <input v-model=\"artwork.style\" id=\"style\" name=\"style\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div v-if=\"!isPhoto && artworkDetails\" class=\"form-label\">\n                            <label for=\"width\">Width</label>\n                            <input v-model=\"artwork.width\" id=\"width\" name=\"width\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                        <div v-if=\"!isPhoto && artworkDetails\" class=\"form-label\">\n                            <label for=\"height\">Height</label>\n                            <input v-model=\"artwork.height\" id=\"height\" name=\"height\" type=\"text\" class=\"form-control rounded-full bg-white\">\n                        </div>\n                    </div>\n                <button type=\"submit\" :disabled=\"pendingFetch\" class=\"btn btn-primary\">\n                    <span v-if=\"pendingFetch\">Submitting...</span>\n                    <span v-else>Submit</span>\n                </button>\n            </form>\n        </article>\n    </section>\n    \n</template>\n\n<script setup>\n    import { useUserLoggedData } from '@/composables/useUserLoggedData'\n    import { useUpdateArtwork } from '@/composables/useUpdateArtwork';\n    \n    const toast = useToast();\n    const route = useRoute()\n    const router = useRouter()\n    const params = route.params\n    const id = ref(params.id)\n    const isPhoto = ref(true)\n    const pendingFetch = ref(false)\n    const dataFetch = ref('')\n    const errorFetch = ref('')\n    const imageFetched = ref(false)\n\n\n    const artworkDetails = ref({\n        style: '',\n        width: '',\n        height:'',\n    })\n\n    const artwork = ref({\n        title: '',\n        description: '',\n        image_url: '',\n        price: '',\n        style: '',\n        width: '',\n        height: '',\n    })\n\n    let artistData = await useUserLoggedData();\n\nonMounted(() => {\n    fetchArtwork(id.value)\n})\n    async function fetchArtwork(artworkId) {\n    const { data, error } = await useFetch(`https://arthub-api-polished-breeze-902.fly.dev/api/v1/artworkDetails/?id=${artworkId}`, {\n        // watch: [artworkCreated],\n    })\n    if (data) {\n        imageFetched.value = true\n        artwork.value = data.value.artwork\n        artworkDetails.value = data.value.photo ? data.value.photo : data.value.painting\n        isPhoto.value = data.value.photo !== undefined ? true : false\n        artwork.value.style = artworkDetails.value.style\n        artwork.value.width = artworkDetails.value.width\n        artwork.value.height = artworkDetails.value.height\n    }\n    if (error) {\n        console.log(error)\n    }\n}\n\nconst updateArtwork = async () => {  \n    const fetchingData = {\n        ...artwork.value,\n        type: isPhoto.value ? 'photo' : 'painting',\n        artworkId: id.value\n        }\n\n        pendingFetch.value = true\n        const { data, error } = await useUpdateArtwork(fetchingData)\n\n        if (error) {\n            errorFetch.value = error\n            pendingFetch.value = false\n\n        } else {\n            errorFetch.value = ''\n            dataFetch.value = data\n            pendingFetch.value = false\n            artoworkUpdateOk()\n        }\n}\n\nfunction artoworkUpdateOk() {\n    toast.add({ title: 'Congratulations! Artwork updated!',\n            timeout: 1500,  callback: () => {\n        setTimeout(() => {\n            navigateTo('/dashboard');\n        }, 250)}\n    })             \n    dataFetch.value = ''\n    errorFetch.value = ''\n    artworkCreated.value += 1\n}\n\n// watch(() => artwork.value.image_url, (newValue, oldValue) => {\n//   // Verifica si la nueva URL de la imagen no es una cadena vacía y es diferente de la anterior\n//   if (newValue !== '' && newValue !== oldValue && !imageFetched) {\n//     artwork.value.image_url = 'https://cdn-icons-png.flaticon.com/512/3616/3616929.png'\n//   }\n// });\n\n</script>\n\n<style scooped>\n.container {\n    --uib-size: 45px;\n    --uib-color: black;\n    --uib-speed: 1.75s;\n    position: relative;\n    height: var(--uib-size);\n    width: var(--uib-size);\n    animation: rotate calc(var(--uib-speed) * 4) linear infinite;\n}\n.image-container {\n    flex: 1; /* Toma todo el espacio disponible */\n    margin-right: 20px; /* Espacio entre la imagen y el formulario */\n}\n\n.form-container {\n    flex: 1; /* Toma todo el espacio disponible */\n}\n\n  .artwork-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center; /* Centra horizontalmente los elementos del formulario */\n  }\n\n  .form-label {\n    width: 100%;\n    max-width: 1000px; /* Ancho máximo del formulario */\n  }\n\n  .form-control {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 20px; /* Cantos redondos */\n    margin-bottom: 10px;\n    box-sizing: border-box;\n  }\n\n  .btn {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 20px; /* Cantos redondos */\n    background-color: #232c33;\n    color: #e1e9ec;\n    cursor: pointer;\n  }\n\n  .btn:hover {\n    background-color: #e1e9ec;\n    color: #232c33;\n  }\n</style>"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,MAAM,oBAAoB,YAAY;AACzC,QAAM,gBAAgB,iBAAkB;AACxC,MAAI,aAAa;AAEjB,QAAM,EAAE,YAAa,aAAY,IAAI,aAAY;AACjD,MAAI,YAAY;AACZ,UAAM,EAAE,MAAM,UAAU,MAAM,SAAS,GAAG,cAAc,OAAO,OAAO,0BAA0B,WAAW,EAAE,IAAI;AAAA,MAC7G,QAAQ;AAAA,MACR,SAAQ;AAAA,QACJ,gBAAgB;AAAA,QAChB,eAAe,UAAU,YAAY;AAAA,MACxC;AAAA,IACJ,GAAA,aAAA;AACD,QAAI,MAAM;AACN,mBAAa,KAAK;AAAA,IACrB;AAEG,aAAO;AAAA,EACnB,OAAW;AACH,YAAQ,MAAM,wCAAwC;AACtD,WAAO;AAAA,EACV;AACD,SAAO;AACX;;;;;;AC4BkB,aAAW;AACzB,UAAM,QAAQ,SAAU;AACT,cAAW;AAC1B,UAAM,SAAS,MAAM;AACV,QAAI,OAAO,EAAE;AACxB,UAAM,UAAU,IAAI,IAAI;AACxB,UAAM,eAAe,IAAI,KAAK;AACZ,QAAI,EAAE;AACL,QAAI,EAAE;AACJ,QAAI,KAAK;AAG9B,UAAM,iBAAiB,IAAI;AAAA,MACvB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAO;AAAA,IACf,CAAK;AAED,UAAM,UAAU,IAAI;AAAA,MAChB,OAAO;AAAA,MACP,aAAa;AAAA,MACb,WAAW;AAAA,MACX,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,IAChB,CAAK;AAEgB,IAAA,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,kBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}