{
  "resolvedId": "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/node_modules/@nuxt/ui/dist/runtime/components/forms/Range.vue?nuxt_component=async&nuxt_component_name=URange",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div :class=\"wrapperClass\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      v-model.number=\"value\"\n      :name=\"name\"\n      :min=\"min\"\n      :max=\"max\"\n      :disabled=\"disabled\"\n      :step=\"step\"\n      type=\"range\"\n      :class=\"[inputClass, thumbClass, trackClass]\"\n      v-bind=\"attrs\"\n      @change=\"onChange\"\n    >\n\n    <span :class=\"progressClass\" :style=\"progressStyle\" />\n  </div>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { range } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.range, range);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return appConfig.ui.colors.includes(value);\n      }\n    },\n    inputClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"range\", toRef(props, \"ui\"), config);\n    const { emitFormChange, inputId, color, size, name } = useFormGroup(props, config);\n    const value = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value2) {\n        emit(\"update:modelValue\", value2);\n      }\n    });\n    const onChange = (event) => {\n      emit(\"change\", event.target.value);\n      emitFormChange();\n    };\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.wrapper,\n        ui.value.size[size.value]\n      ), props.class);\n    });\n    const inputClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.background,\n        ui.value.rounded,\n        color.value && ui.value.ring.replaceAll(\"{color}\", color.value),\n        ui.value.size[size.value]\n      ), props.inputClass);\n    });\n    const thumbClass = computed(() => {\n      return twJoin(\n        ui.value.thumb.base,\n        // Intermediate class to allow thumb ring or background color (set to `current`) as it's impossible to safelist with arbitrary values\n        color.value && ui.value.thumb.color.replaceAll(\"{color}\", color.value),\n        ui.value.thumb.ring,\n        ui.value.thumb.background,\n        ui.value.thumb.size[size.value]\n      );\n    });\n    const trackClass = computed(() => {\n      return twJoin(\n        ui.value.track.base,\n        ui.value.track.background,\n        ui.value.track.rounded,\n        ui.value.track.size[size.value]\n      );\n    });\n    const progressClass = computed(() => {\n      return twJoin(\n        ui.value.progress.base,\n        ui.value.progress.rounded,\n        color.value && ui.value.progress.background.replaceAll(\"{color}\", color.value),\n        ui.value.progress.size[size.value]\n      );\n    });\n    const progressStyle = computed(() => {\n      const { modelValue, min, max } = props;\n      const clampedValue = Math.max(min, Math.min(modelValue, max));\n      const relativeValue = (clampedValue - min) / (max - min);\n      return {\n        width: `${relativeValue * 100}%`\n      };\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      value,\n      wrapperClass,\n      // eslint-disable-next-line vue/no-dupe-keys\n      inputClass,\n      thumbClass,\n      trackClass,\n      progressClass,\n      progressStyle,\n      onChange\n    };\n  }\n});\n</script>\n",
      "start": 1714082886455,
      "end": 1714082887402,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714082887402,
      "end": 1714082887402,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { range } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.range, range);\nconst _sfc_main = defineComponent({\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return appConfig.ui.colors.includes(value);\n      }\n    },\n    inputClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"range\", toRef(props, \"ui\"), config);\n    const { emitFormChange, inputId, color, size, name } = useFormGroup(props, config);\n    const value = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value2) {\n        emit(\"update:modelValue\", value2);\n      }\n    });\n    const onChange = (event) => {\n      emit(\"change\", event.target.value);\n      emitFormChange();\n    };\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.wrapper,\n        ui.value.size[size.value]\n      ), props.class);\n    });\n    const inputClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.background,\n        ui.value.rounded,\n        color.value && ui.value.ring.replaceAll(\"{color}\", color.value),\n        ui.value.size[size.value]\n      ), props.inputClass);\n    });\n    const thumbClass = computed(() => {\n      return twJoin(\n        ui.value.thumb.base,\n        // Intermediate class to allow thumb ring or background color (set to `current`) as it's impossible to safelist with arbitrary values\n        color.value && ui.value.thumb.color.replaceAll(\"{color}\", color.value),\n        ui.value.thumb.ring,\n        ui.value.thumb.background,\n        ui.value.thumb.size[size.value]\n      );\n    });\n    const trackClass = computed(() => {\n      return twJoin(\n        ui.value.track.base,\n        ui.value.track.background,\n        ui.value.track.rounded,\n        ui.value.track.size[size.value]\n      );\n    });\n    const progressClass = computed(() => {\n      return twJoin(\n        ui.value.progress.base,\n        ui.value.progress.rounded,\n        color.value && ui.value.progress.background.replaceAll(\"{color}\", color.value),\n        ui.value.progress.size[size.value]\n      );\n    });\n    const progressStyle = computed(() => {\n      const { modelValue, min, max } = props;\n      const clampedValue = Math.max(min, Math.min(modelValue, max));\n      const relativeValue = (clampedValue - min) / (max - min);\n      return {\n        width: `${relativeValue * 100}%`\n      };\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      value,\n      wrapperClass,\n      // eslint-disable-next-line vue/no-dupe-keys\n      inputClass,\n      thumbClass,\n      trackClass,\n      progressClass,\n      progressStyle,\n      onChange\n    };\n  }\n});\n\nimport { mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs, ssrGetDynamicModelProps as _ssrGetDynamicModelProps, ssrRenderClass as _ssrRenderClass, ssrRenderStyle as _ssrRenderStyle } from \"vue/server-renderer\"\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n  let _temp0\n\n  _push(`<div${\n    _ssrRenderAttrs(_mergeProps({ class: _ctx.wrapperClass }, _attrs))\n  }><input${\n    _ssrRenderAttrs((_temp0 = _mergeProps({\n      id: _ctx.inputId,\n      ref: \"input\",\n      value: _ctx.value,\n      name: _ctx.name,\n      min: _ctx.min,\n      max: _ctx.max,\n      disabled: _ctx.disabled,\n      step: _ctx.step,\n      type: \"range\",\n      class: [_ctx.inputClass, _ctx.thumbClass, _ctx.trackClass]\n    }, _ctx.attrs), _mergeProps(_temp0, _ssrGetDynamicModelProps(_temp0, _ctx.value))))\n  }><span class=\"${\n    _ssrRenderClass(_ctx.progressClass)\n  }\" style=\"${\n    _ssrRenderStyle(_ctx.progressStyle)\n  }\"></span></div>`)\n}\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"node_modules/@nuxt/ui/dist/runtime/components/forms/Range.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])",
      "start": 1714082887402,
      "end": 1714082887403,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/node_modules/@nuxt/ui/dist/runtime/components/forms/Range.vue",
        "names": [],
        "sources": [
          "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/node_modules/@nuxt/ui/dist/runtime/components/forms/Range.vue"
        ],
        "sourcesContent": [
          "<template>\n  <div :class=\"wrapperClass\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      v-model.number=\"value\"\n      :name=\"name\"\n      :min=\"min\"\n      :max=\"max\"\n      :disabled=\"disabled\"\n      :step=\"step\"\n      type=\"range\"\n      :class=\"[inputClass, thumbClass, trackClass]\"\n      v-bind=\"attrs\"\n      @change=\"onChange\"\n    >\n\n    <span :class=\"progressClass\" :style=\"progressStyle\" />\n  </div>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { range } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.range, range);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return appConfig.ui.colors.includes(value);\n      }\n    },\n    inputClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"range\", toRef(props, \"ui\"), config);\n    const { emitFormChange, inputId, color, size, name } = useFormGroup(props, config);\n    const value = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value2) {\n        emit(\"update:modelValue\", value2);\n      }\n    });\n    const onChange = (event) => {\n      emit(\"change\", event.target.value);\n      emitFormChange();\n    };\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.wrapper,\n        ui.value.size[size.value]\n      ), props.class);\n    });\n    const inputClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.background,\n        ui.value.rounded,\n        color.value && ui.value.ring.replaceAll(\"{color}\", color.value),\n        ui.value.size[size.value]\n      ), props.inputClass);\n    });\n    const thumbClass = computed(() => {\n      return twJoin(\n        ui.value.thumb.base,\n        // Intermediate class to allow thumb ring or background color (set to `current`) as it's impossible to safelist with arbitrary values\n        color.value && ui.value.thumb.color.replaceAll(\"{color}\", color.value),\n        ui.value.thumb.ring,\n        ui.value.thumb.background,\n        ui.value.thumb.size[size.value]\n      );\n    });\n    const trackClass = computed(() => {\n      return twJoin(\n        ui.value.track.base,\n        ui.value.track.background,\n        ui.value.track.rounded,\n        ui.value.track.size[size.value]\n      );\n    });\n    const progressClass = computed(() => {\n      return twJoin(\n        ui.value.progress.base,\n        ui.value.progress.rounded,\n        color.value && ui.value.progress.background.replaceAll(\"{color}\", color.value),\n        ui.value.progress.size[size.value]\n      );\n    });\n    const progressStyle = computed(() => {\n      const { modelValue, min, max } = props;\n      const clampedValue = Math.max(min, Math.min(modelValue, max));\n      const relativeValue = (clampedValue - min) / (max - min);\n      return {\n        width: `${relativeValue * 100}%`\n      };\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      value,\n      wrapperClass,\n      // eslint-disable-next-line vue/no-dupe-keys\n      inputClass,\n      thumbClass,\n      trackClass,\n      progressClass,\n      progressStyle,\n      onChange\n    };\n  }\n});\n</script>\n"
        ],
        "mappings": "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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MAChC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChtB,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MAChC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACpI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC;IACH,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MAChC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA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"
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/node_modules/@nuxt/ui/dist/runtime/components/forms/Range.vue\").then(r => r.default))",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714082887403,
      "end": 1714082887403,
      "order": "normal"
    }
  ]
}
