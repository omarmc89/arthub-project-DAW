{
  "resolvedId": "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/node_modules/@nuxt/ui/dist/runtime/components/overlays/Slideovers.client.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveDynamicComponent as _resolveDynamicComponent, isRef as _isRef, mergeProps as _mergeProps, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nimport { inject } from 'vue'\nimport { useSlideover, slidOverInjectionKey } from '../../composables/useSlideover'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Slideovers.client',\n  setup(__props) {\n\nconst slideoverState = inject(slidOverInjectionKey)\n\nconst { isOpen } = useSlideover()\n\nreturn (_ctx: any,_cache: any) => {\n  return (_unref(slideoverState))\n    ? (_openBlock(), _createBlock(_resolveDynamicComponent(_unref(slideoverState).component), _mergeProps({ key: 0 }, _unref(slideoverState).props, {\n        modelValue: _unref(isOpen),\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(isOpen) ? (isOpen).value = $event : null))\n      }), null, 16, [\"modelValue\"]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})",
      "start": 1714082883007,
      "end": 1714082883007,
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/node_modules/@nuxt/ui/dist/runtime/components/overlays/Slideovers.client.vue"
        ],
        "sourcesContent": [
          "<template>\n  <component\n    :is=\"slideoverState.component\"\n    v-if=\"slideoverState\"\n    v-bind=\"slideoverState.props\"\n    v-model=\"isOpen\"\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject } from 'vue'\nimport { useSlideover, slidOverInjectionKey } from '../../composables/useSlideover'\n\nconst slideoverState = inject(slidOverInjectionKey)\n\nconst { isOpen } = useSlideover()\n</script>\n"
        ],
        "names": [],
        "mappings": ";;;AAUA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF;;;;;AAHwB;AAIxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;;;"
      }
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714082883007,
      "end": 1714082883007,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714082883007,
      "end": 1714082883007,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714082883007,
      "end": 1714082883007,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714082883007,
      "end": 1714082883007,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveDynamicComponent as _resolveDynamicComponent, isRef as _isRef, mergeProps as _mergeProps, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nimport { inject } from \"vue\";\nimport { useSlideover, slidOverInjectionKey } from \"../../composables/useSlideover\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Slideovers.client\",\n  setup(__props) {\n    const slideoverState = inject(slidOverInjectionKey);\n    const { isOpen } = useSlideover();\n    return (_ctx, _cache) => {\n      return _unref(slideoverState) ? (_openBlock(), _createBlock(_resolveDynamicComponent(_unref(slideoverState).component), _mergeProps({ key: 0 }, _unref(slideoverState).props, {\n        modelValue: _unref(isOpen),\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event) => _isRef(isOpen) ? isOpen.value = $event : null)\n      }), null, 16, [\"modelValue\"])) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714082883007,
      "end": 1714082883071,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/node_modules/@nuxt/ui/dist/runtime/components/overlays/Slideovers.client.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveDynamicComponent as _resolveDynamicComponent, isRef as _isRef, mergeProps as _mergeProps, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nimport { inject } from 'vue'\nimport { useSlideover, slidOverInjectionKey } from '../../composables/useSlideover'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Slideovers.client',\n  setup(__props) {\n\nconst slideoverState = inject(slidOverInjectionKey)\n\nconst { isOpen } = useSlideover()\n\nreturn (_ctx: any,_cache: any) => {\n  return (_unref(slideoverState))\n    ? (_openBlock(), _createBlock(_resolveDynamicComponent(_unref(slideoverState).component), _mergeProps({ key: 0 }, _unref(slideoverState).props, {\n        modelValue: _unref(isOpen),\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(isOpen) ? (isOpen).value = $event : null))\n      }), null, 16, [\"modelValue\"]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,SAAS,QAAQ,2BAA2B,0BAA0B,SAAS,QAAQ,cAAc,aAAa,aAAa,YAAY,eAAe,cAAc,sBAAsB,2BAA2B;AAElO,SAAS,cAAc;AACvB,SAAS,cAAc,4BAA4B;AAGnD,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,MAAM,SAAS;AAEjB,UAAM,iBAAiB,OAAO,oBAAoB;AAElD,UAAM,EAAE,OAAO,IAAI,aAAa;AAEhC,WAAO,CAAC,MAAU,WAAgB;AAChC,aAAQ,OAAO,cAAc,KACxB,WAAW,GAAG,aAAa,yBAAyB,OAAO,cAAc,EAAE,SAAS,GAAG,YAAY,EAAE,KAAK,EAAE,GAAG,OAAO,cAAc,EAAE,OAAO;AAAA,QAC5I,YAAY,OAAO,MAAM;AAAA,QACzB,uBAAuB,OAAO,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,WAAiB,OAAO,MAAM,IAAK,OAAQ,QAAQ,SAAS;AAAA,MAChH,CAAC,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,KAC5B,oBAAoB,IAAI,IAAI;AAAA,IAClC;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714082883071,
      "end": 1714082883071,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714082883071,
      "end": 1714082883072,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714082883072,
      "end": 1714082883072,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714082883072,
      "end": 1714082883072,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714082883072,
      "end": 1714082883072,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714082883072,
      "end": 1714082883072,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714082883072,
      "end": 1714082883072,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714082883072,
      "end": 1714082883072,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714082883072,
      "end": 1714082883072,
      "order": "normal"
    }
  ]
}
