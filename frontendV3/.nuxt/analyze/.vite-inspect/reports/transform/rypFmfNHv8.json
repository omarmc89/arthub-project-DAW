{
  "resolvedId": "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/pages/listartworks/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n    <h1>Artworks</h1>\n\n    <ArtworksGrid />\n</template>\n\n<script setup>\n</script>",
      "start": 1714082882169,
      "end": 1714082882260,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "const _sfc_main = {}\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Artworks\", -1)\n\nfunction _sfc_render(_ctx, _cache) {\n  const _component_ArtworksGrid = _resolveComponent(\"ArtworksGrid\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createVNode(_component_ArtworksGrid)\n  ], 64))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/pages/listartworks/index.vue"
        ],
        "names": [],
        "mappings": ";;gCACI,oBAAiB,YAAb,UAAQ;;;;;wBADhB;IACI,UAAiB;IAEjB,aAAgB",
        "sourcesContent": [
          "<template>\n    <h1>Artworks</h1>\n\n    <ArtworksGrid />\n</template>\n\n<script setup>\n</script>"
        ]
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/components/ArtworksGrid.vue\";\nconst _sfc_main = {}\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Artworks\", -1)\n\nfunction _sfc_render(_ctx, _cache) {\n  const _component_ArtworksGrid = __nuxt_component_0\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createVNode(_component_ArtworksGrid)\n  ], 64))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACppC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAiC;AACnE;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC;AACD;AACA;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC"
      }
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714082882260,
      "end": 1714082882260,
      "order": "normal"
    }
  ]
}
