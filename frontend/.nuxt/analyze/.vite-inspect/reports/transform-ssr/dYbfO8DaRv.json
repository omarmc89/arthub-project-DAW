{
  "resolvedId": "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/middleware/auth.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useAuthStore } from '~/store/auth';\n\n\nexport default defineNuxtRouteMiddleware((to, _from) => {\n  const { userLogged } = storeToRefs(useAuthStore())\n  \n  let token = null\n  if (process.client) {\n    token = localStorage.getItem('token')\n  }\n  if (!userLogged.value && !token) {\n    return navigateTo('/login')\n  }\n})",
      "start": 1714082888039,
      "end": 1714082888184,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714082888184,
      "end": 1714082888184,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714082888184,
      "end": 1714082888184,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714082888184,
      "end": 1714082888184,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714082888184,
      "end": 1714082888184,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714082888184,
      "end": 1714082888184,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1714082888184,
      "end": 1714082888184,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714082888184,
      "end": 1714082888184,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { useAuthStore } from \"~/store/auth\";\nexport default defineNuxtRouteMiddleware((to, _from) => {\n  const { userLogged } = storeToRefs(useAuthStore());\n  let token = null;\n  if (process.client) {\n    token = localStorage.getItem(\"token\");\n  }\n  if (!userLogged.value && !token) {\n    return navigateTo(\"/login\");\n  }\n});\n",
      "start": 1714082888184,
      "end": 1714082888900,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/middleware/auth.ts"
        ],
        "sourcesContent": [
          "import { useAuthStore } from '~/store/auth';\n\n\nexport default defineNuxtRouteMiddleware((to, _from) => {\n  const { userLogged } = storeToRefs(useAuthStore())\n  \n  let token = null\n  if (process.client) {\n    token = localStorage.getItem('token')\n  }\n  if (!userLogged.value && !token) {\n    return navigateTo('/login')\n  }\n})"
        ],
        "mappings": "AAAA,SAAS,oBAAoB;AAG7B,eAAe,0BAA0B,CAAC,IAAI,UAAU;AACtD,QAAM,EAAE,WAAW,IAAI,YAAY,aAAa,CAAC;AAEjD,MAAI,QAAQ;AACZ,MAAI,QAAQ,QAAQ;AAClB,YAAQ,aAAa,QAAQ,OAAO;AAAA,EACtC;AACA,MAAI,CAAC,WAAW,SAAS,CAAC,OAAO;AAC/B,WAAO,WAAW,QAAQ;AAAA,EAC5B;AACF,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714082888900,
      "end": 1714082888900,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { useAuthStore } from \"~/store/auth\";\nexport default defineNuxtRouteMiddleware((to, _from) => {\n  const { userLogged } = storeToRefs(useAuthStore());\n  let token = null;\n  if (false) {\n    token = localStorage.getItem(\"token\");\n  }\n  if (!userLogged.value && !token) {\n    return navigateTo(\"/login\");\n  }\n});\n",
      "start": 1714082888900,
      "end": 1714082889073,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/middleware/auth.ts\"],\n  \"sourcesContent\": [\"import { useAuthStore } from \\\"~/store/auth\\\";\\nexport default defineNuxtRouteMiddleware((to, _from) => {\\n  const { userLogged } = storeToRefs(useAuthStore());\\n  let token = null;\\n  if (process.client) {\\n    token = localStorage.getItem(\\\"token\\\");\\n  }\\n  if (!userLogged.value && !token) {\\n    return navigateTo(\\\"/login\\\");\\n  }\\n});\\n\"],\n  \"mappings\": \"AAAA,SAAS,oBAAoB;AAC7B,eAAe,0BAA0B,CAAC,IAAI,UAAU;AACtD,QAAM,EAAE,WAAW,IAAI,YAAY,aAAa,CAAC;AACjD,MAAI,QAAQ;AACZ,MAAI,OAAgB;AAClB,YAAQ,aAAa,QAAQ,OAAO;AAAA,EACtC;AACA,MAAI,CAAC,WAAW,SAAS,CAAC,OAAO;AAC/B,WAAO,WAAW,QAAQ;AAAA,EAC5B;AACF,CAAC;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1714082889073,
      "end": 1714082889073,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714082889073,
      "end": 1714082889073,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714082889073,
      "end": 1714082889073,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714082889073,
      "end": 1714082889073,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714082889073,
      "end": 1714082889073,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714082889073,
      "end": 1714082889073,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714082889073,
      "end": 1714082889073,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714082889073,
      "end": 1714082889073,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714082889073,
      "end": 1714082889073,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineNuxtRouteMiddleware, navigateTo } from '#app/composables/router';\nimport { storeToRefs } from '/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/node_modules/@pinia/nuxt/dist/runtime/composables';\nimport { useAuthStore } from \"~/store/auth\";\nexport default defineNuxtRouteMiddleware((to, _from) => {\n  const { userLogged } = storeToRefs(useAuthStore());\n  let token = null;\n  if (false) {\n    token = localStorage.getItem(\"token\");\n  }\n  if (!userLogged.value && !token) {\n    return navigateTo(\"/login\");\n  }\n});\n",
      "start": 1714082889073,
      "end": 1714082889074,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineNuxtRouteMiddleware, navigateTo } from '#app/composables/router';\nimport { storeToRefs } from '/Users/omarmartin/Documents/DAW/arthub-project-DAW/frontendV3/node_modules/@pinia/nuxt/dist/runtime/composables';\nimport { useAuthStore } from \"~/store/auth\";\nexport default defineNuxtRouteMiddleware((to, _from) => {\n  const { userLogged } = storeToRefs(useAuthStore());\n  let token = null;\n  if (false) {\n    token = localStorage.getItem(\"token\");\n  }\n  if (!userLogged.value && !token) {\n    return navigateTo(\"/login\");\n  }\n});\n",
      "start": 1714082889073,
      "end": 1714082889074,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1714082889074,
      "end": 1714082889074,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714082889074,
      "end": 1714082889074,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714082889074,
      "end": 1714082889074,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714082889074,
      "end": 1714082889074,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1714082889074,
      "end": 1714082889074,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714082889074,
      "end": 1714082889074,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714082889074,
      "end": 1714082889074,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714082889074,
      "end": 1714082889074,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714082889074,
      "end": 1714082889074,
      "order": "normal"
    }
  ]
}
