{"version":3,"file":"D6pSI3Cj.js","sources":["../../../../node_modules/@iconify/vue/dist/offline.mjs","../../../../node_modules/@iconify/vue/dist/iconify.mjs","../../../../node_modules/nuxt-icon/dist/runtime/Icon.vue"],"sourcesContent":["import { h, defineComponent } from 'vue';\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      // Allowed characters before id: [#;\"]\n      // Allowed characters after id: [)\"], .[a-z]\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    webkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Aliases for customisations.\n * In Vue 'v-' properties are reserved, so v-flip must be renamed\n */\nconst customisationAliases = {};\n['horizontal', 'vertical'].forEach((prefix) => {\n    const attr = prefix.slice(0, 1) + 'Flip';\n    // vertical-flip\n    customisationAliases[prefix + '-flip'] = attr;\n    // v-flip\n    customisationAliases[prefix.slice(0, 1) + '-flip'] = attr;\n    // verticalFlip\n    customisationAliases[prefix + 'Flip'] = attr;\n});\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops) => {\n    // Split properties\n    const customisations = mergeCustomisations(defaultExtendedIconCustomisations, props);\n    const componentProps = { ...svgDefaults };\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Copy style\n    const style = {};\n    const propsStyle = props.style;\n    const customStyle = typeof propsStyle === 'object' && !(propsStyle instanceof Array)\n        ? propsStyle\n        : {};\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'onLoad':\n            case 'mode':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: override style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                // Vue transforms 'aria-hidden' property to 'ariaHidden'\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            default: {\n                const alias = customisationAliases[key];\n                if (alias) {\n                    // Aliases for boolean customisations\n                    if (value === true || value === 'true' || value === 1) {\n                        customisations[alias] = true;\n                    }\n                }\n                else if (defaultExtendedIconCustomisations[key] === void 0) {\n                    // Copy missing property if it does not exist in customisations\n                    componentProps[key] = value;\n                }\n            }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add innerHTML and style to props\n        componentProps['innerHTML'] = replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue');\n        // Render icon\n        return h('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return h('span', componentProps);\n};\n\n/**\n * Storage for icons referred by name\n */\nconst storage = Object.create(null);\n/**\n * Add icon to storage, allowing to call it by name\n *\n * @param name\n * @param data\n */\nfunction addIcon(name, data) {\n    storage[name] = data;\n}\n/**\n * Add collection to storage, allowing to call icons by name\n *\n * @param data Icon set\n * @param prefix Optional prefix to add to icon names, true (default) if prefix from icon set should be used.\n */\nfunction addCollection(data, prefix) {\n    const iconPrefix = typeof prefix === 'string'\n        ? prefix\n        : prefix !== false && typeof data.prefix === 'string'\n            ? data.prefix + ':'\n            : '';\n    quicklyValidateIconSet(data) &&\n        parseIconSet(data, (name, icon) => {\n            if (icon) {\n                storage[iconPrefix + name] = icon;\n            }\n        });\n}\n/**\n * Component\n */\nconst Icon = defineComponent({\n    // Do not inherit other attributes: it is handled by render()\n    inheritAttrs: false,\n    // Render icon\n    render() {\n        const props = this.$attrs;\n        // Check icon\n        const propsIcon = props.icon;\n        const icon = typeof propsIcon === 'string'\n            ? storage[propsIcon]\n            : typeof propsIcon === 'object'\n                ? propsIcon\n                : null;\n        // Validate icon object\n        if (icon === null ||\n            typeof icon !== 'object' ||\n            typeof icon.body !== 'string') {\n            return this.$slots.default ? this.$slots.default() : null;\n        }\n        // Valid icon: render it\n        return render({\n            ...defaultIconProps,\n            ...icon,\n        }, props);\n    },\n});\n\nexport { Icon, addCollection, addIcon };\n","import { h, defineComponent } from 'vue';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      // Allowed characters before id: [#;\"]\n      // Allowed characters after id: [)\"], .[a-z]\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n    // Matches or newer\n    lastValue && lastValue >= lastModified\n  ) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    webkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Aliases for customisations.\n * In Vue 'v-' properties are reserved, so v-flip must be renamed\n */\nconst customisationAliases = {};\n['horizontal', 'vertical'].forEach((prefix) => {\n    const attr = prefix.slice(0, 1) + 'Flip';\n    // vertical-flip\n    customisationAliases[prefix + '-flip'] = attr;\n    // v-flip\n    customisationAliases[prefix.slice(0, 1) + '-flip'] = attr;\n    // verticalFlip\n    customisationAliases[prefix + 'Flip'] = attr;\n});\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops) => {\n    // Split properties\n    const customisations = mergeCustomisations(defaultExtendedIconCustomisations, props);\n    const componentProps = { ...svgDefaults };\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Copy style\n    const style = {};\n    const propsStyle = props.style;\n    const customStyle = typeof propsStyle === 'object' && !(propsStyle instanceof Array)\n        ? propsStyle\n        : {};\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'onLoad':\n            case 'mode':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: override style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                // Vue transforms 'aria-hidden' property to 'ariaHidden'\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            default: {\n                const alias = customisationAliases[key];\n                if (alias) {\n                    // Aliases for boolean customisations\n                    if (value === true || value === 'true' || value === 1) {\n                        customisations[alias] = true;\n                    }\n                }\n                else if (defaultExtendedIconCustomisations[key] === void 0) {\n                    // Copy missing property if it does not exist in customisations\n                    componentProps[key] = value;\n                }\n            }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add innerHTML and style to props\n        componentProps['innerHTML'] = replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue');\n        // Render icon\n        return h('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return h('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\n/**\n * Empty icon data, rendered when icon is not available\n */\nconst emptyIcon = {\n    ...defaultIconProps,\n    body: '',\n};\nconst Icon = defineComponent({\n    // Do not inherit other attributes: it is handled by render()\n    inheritAttrs: false,\n    // Set initial data\n    data() {\n        return {\n            // Mounted status\n            iconMounted: false,\n            // Callback counter to trigger re-render\n            counter: 0,\n        };\n    },\n    mounted() {\n        // Current icon name\n        this._name = '';\n        // Loading\n        this._loadingIcon = null;\n        // Mark as mounted\n        this.iconMounted = true;\n    },\n    unmounted() {\n        this.abortLoading();\n    },\n    methods: {\n        abortLoading() {\n            if (this._loadingIcon) {\n                this._loadingIcon.abort();\n                this._loadingIcon = null;\n            }\n        },\n        // Get data for icon to render or null\n        getIcon(icon, onload) {\n            // Icon is an object\n            if (typeof icon === 'object' &&\n                icon !== null &&\n                typeof icon.body === 'string') {\n                // Stop loading\n                this._name = '';\n                this.abortLoading();\n                return {\n                    data: icon,\n                };\n            }\n            // Invalid icon?\n            let iconName;\n            if (typeof icon !== 'string' ||\n                (iconName = stringToIcon(icon, false, true)) === null) {\n                this.abortLoading();\n                return null;\n            }\n            // Load icon\n            const data = getIconData(iconName);\n            if (!data) {\n                // Icon data is not available\n                if (!this._loadingIcon || this._loadingIcon.name !== icon) {\n                    // New icon to load\n                    this.abortLoading();\n                    this._name = '';\n                    if (data !== null) {\n                        // Icon was not loaded\n                        this._loadingIcon = {\n                            name: icon,\n                            abort: loadIcons([iconName], () => {\n                                this.counter++;\n                            }),\n                        };\n                    }\n                }\n                return null;\n            }\n            // Icon data is available\n            this.abortLoading();\n            if (this._name !== icon) {\n                this._name = icon;\n                if (onload) {\n                    onload(icon);\n                }\n            }\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            return { data, classes };\n        },\n    },\n    // Render icon\n    render() {\n        // Re-render when counter changes\n        this.counter;\n        const props = this.$attrs;\n        // Get icon data\n        const icon = this.iconMounted\n            ? this.getIcon(props.icon, props.onLoad)\n            : null;\n        // Validate icon object\n        if (!icon) {\n            return render(emptyIcon, props);\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                class: (typeof props['class'] === 'string'\n                    ? props['class'] + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render({\n            ...defaultIconProps,\n            ...icon.data,\n        }, newProps);\n    },\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs };\n","<!-- eslint-disable vue/multi-word-component-names -->\n<script setup lang=\"ts\">\nimport type { IconifyIcon } from '@iconify/vue'\nimport { Icon as Iconify } from '@iconify/vue/dist/offline'\nimport { loadIcon, addAPIProvider } from '@iconify/vue'\nimport { ref, computed, watch } from 'vue'\nimport { useAppConfig, useNuxtApp, useState } from '#imports'\nimport { resolveIconName } from './utils'\n\nconst nuxtApp = useNuxtApp()\nconst appConfig = useAppConfig() as {\n  nuxtIcon: {\n    size?: string\n    class?: string\n    aliases?: Record<string, string>\n    iconifyApiOptions?: {\n      url?: string\n      publicApiFallback?: boolean\n    }\n  }\n}\n\nconst props = defineProps({\n  name: {\n    type: String,\n    required: true\n  },\n  size: {\n    type: String,\n    default: ''\n  }\n})\n\nwatch(() => appConfig.nuxtIcon?.iconifyApiOptions, () => {\n  if (!appConfig.nuxtIcon?.iconifyApiOptions?.url) return\n\n  // validate the custom Iconify API URL\n  try {\n    new URL(appConfig.nuxtIcon.iconifyApiOptions.url)\n  } catch (e) {\n    console.warn('Nuxt Icon: Invalid custom Iconify API URL')\n    return\n  }\n\n  // don't override the default public api if publicApiFallback is enabled. See more: https://iconify.design/docs/api/providers.html\n  if (appConfig.nuxtIcon?.iconifyApiOptions?.publicApiFallback) {\n    addAPIProvider('custom', {\n      resources: [appConfig.nuxtIcon?.iconifyApiOptions.url],\n      index: 0\n    })\n    return\n  }\n\n  // override the default public api to force the use of the custom API\n  addAPIProvider('', {\n    resources: [appConfig.nuxtIcon?.iconifyApiOptions.url],\n  })\n}, { immediate: true })\n\nconst state = useState<Record<string, IconifyIcon | undefined>>('icons', () => ({}))\nconst isFetching = ref(false)\nconst iconName = computed(() => {\n  if (appConfig.nuxtIcon?.aliases?.[props.name]) {\n    return appConfig.nuxtIcon.aliases[props.name]!\n  }\n  return props.name\n})\nconst resolvedIcon = computed(() => resolveIconName(iconName.value))\nconst iconKey = computed(() => [resolvedIcon.value.provider, resolvedIcon.value.prefix, resolvedIcon.value.name].filter(Boolean).join(':'))\nconst icon = computed<IconifyIcon | undefined>(() => state.value?.[iconKey.value])\nconst component = computed(() => nuxtApp.vueApp?.component(iconName.value))\nconst sSize = computed(() => {\n  // Disable size if appConfig.nuxtIcon.size === false\n  // @ts-ignore\n  if (!props.size && typeof appConfig.nuxtIcon?.size === 'boolean' && !appConfig.nuxtIcon?.size) {\n    return undefined\n  }\n  // @ts-ignore\n  const size = props.size || appConfig.nuxtIcon?.size || '1em'\n  if (String(Number(size)) === size) {\n    return `${size}px`\n  }\n  return size\n})\nconst className = computed(() => (appConfig as any)?.nuxtIcon?.class ?? 'icon')\n\nasync function loadIconComponent () {\n  if (component.value) {\n    return\n  }\n  if (!state.value?.[iconKey.value]) {\n    isFetching.value = true\n    state.value[iconKey.value] = await loadIcon(resolvedIcon.value).catch(() => undefined)\n    isFetching.value = false\n  }\n}\n\nwatch(iconName, loadIconComponent)\n\n!component.value && await loadIconComponent()\n</script>\n\n<template>\n  <span v-if=\"isFetching\" :class=\"className\" :style=\"{ width: sSize, height: sSize }\" />\n  <Iconify v-else-if=\"icon\" :icon=\"icon\" :class=\"className\" :width=\"sSize\" :height=\"sSize\" />\n  <Component :is=\"component\" v-else-if=\"component\" :class=\"className\" :width=\"sSize\" :height=\"sSize\" />\n  <span v-else :class=\"className\" :style=\"{ fontSize: sSize, lineHeight: sSize, width: sSize, height: sSize }\"><slot>{{ name }}</slot></span>\n</template>\n\n<style scoped>\n.icon {\n  display: inline-block;\n  vertical-align: middle;\n}\n</style>\n"],"names":["defaultIconDimensions","defaultIconTransformations","defaultIconProps","defaultIconSizeCustomisations","defaultIconCustomisations","mergeCustomisations","defaults","item","result","key","value","valueType","separator","flipFromString","custom","flip","str","rotateFromString","defaultValue","units","cleanup","value2","num","split","unitsSplit","unitsTest","calculateSize","size","ratio","precision","oldParts","newParts","code","isNumber","isUnsetKeyword","iconToSVG","icon","customisations","fullIcon","fullCustomisations","box","body","props","transformations","hFlip","vFlip","rotation","tempValue","customisationsWidth","customisationsHeight","boxWidth","boxHeight","width","height","attributes","setAttr","prop","regex","randomPrefix","counter","replaceIDs","prefix","ids","match","suffix","id","newID","escapedID","iconToHTML","renderAttribsHTML","attr","encodeSVGforURL","svg","svgToData","svgToURL","defaultExtendedIconCustomisations","svgDefaults","commonProps","monotoneProps","coloredProps","propsToAdd","propsToAddTo","list","customisationAliases","fixSize","render","componentProps","mode","style","propsStyle","customStyle","alias","renderAttribs","localCounter","h","useMask","html","storage","Icon","defineComponent","propsIcon","matchIconName","stringToIcon","validate","allowSimpleName","provider","colonSeparated","name2","validateIconName","name","dashSeparated","defaultExtendedIconProps","mergeIconTransformations","obj1","obj2","rotate","mergeIconData","parent","child","getIconsTree","data","names","icons","aliases","resolved","resolve","internalGetIconData","tree","currentProps","parse","parseIconSet","callback","optionalPropertyDefaults","checkOptionalProps","quicklyValidateIconSet","obj","dataStorage","newStorage","getStorage","providerStorage","addIconSet","addIconToStorage","simpleNames","allowSimpleNames","allow","getIconData","iconName","addIcon","addCollection","added","setAPIModule","getAPIModule","createAPIConfig","source","resources","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","detectFetch","fetchModule","calculateMaxLength","maxHostLength","url","shouldAbort","status","prepare","results","maxLength","type","length","index","getPath","send","host","params","path","iconsList","urlParams","uri","defaultError","response","fetchAPIModule","sortIcons","a","b","lastIcon","localStorage","removeCallback","storages","items","row","updateCallbacks","hasPending","oldLength","idCounter","storeCallback","pendingSources","abort","listToIcons","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","nextIndex","startTime","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","subscribe","overwrite","getQueryStatus","failQuery","clearQueue","moduleResponse","isError","queued","execNext","resource","status2","initRedundancy","cfg","queries","queryCallback","doneCallback","query2","error","find","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","target","api","cached","moduleKey","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","browserStorageCacheExpiration","getStoredItem","func","setStoredItem","removeStoredItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","browserStorageConfig","browserStorageEmptyItems","browserStorageStatus","setBrowserStorageStatus","_window","getBrowserStorage","iterateBrowserStorage","version","total2","i","minTime","parseItem","total","initBrowserStorage","iconSet","lastModified","updateLastModified","lastValue","storeInBrowserStorage","store","set","emptyCallback","loadedNewIcons","loadNewIcons","icons2","parsed","pending","err","loadIcons","cleanedIcons","sortedIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","loadIcon","fulfill","reject","iconObj","loaded","preload","providers","nuxtApp","useNuxtApp","appConfig","useAppConfig","__props","watch","_a","_b","_d","_c","_e","_f","state","useState","isFetching","ref","computed","resolvedIcon","resolveIconName","iconKey","component","sSize","className","loadIconComponent","__temp","__restore","_withAsyncContext"],"mappings":"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","x_google_ignoreList":[0,1,2]}